# NIDS Backend - Development Configuration

# Model Configuration
models:
  binary_classifier:
    path: "data/models/logistic_regression_model.mat"
    threshold: 0.3  # Lower threshold for development/testing
    type: "logistic_regression"
  
  multiclass_classifier:
    path: "data/models/decision_tree_model.mat"
    type: "decision_tree"
    
  # Feature metadata (exported from MATLAB)
  metadata:
    feature_order: "data/models/feature_order.json"
    scaler_params: "data/models/scaler_params.json"
    class_encoder: "data/models/class_encoder.json"

# Network Capture Settings
capture:
  interface: null  # null = auto-detect
  filter: "tcp or udp"  # BPF filter
  promiscuous: false
  buffer_size: 2048
  timeout: 1.0  # seconds

# Feature Extraction
features:
  window_size: 10
  window_overlap: 0.5
  session_timeout: 300
  max_payload_bytes: 1500
  packet_features: true
  flow_features: true
  temporal_features: true
  payload_features: true

# Performance Tuning
performance:
  max_packet_latency: 50
  max_multiclass_latency: 200
  max_concurrent_sessions: 1000
  feature_cache_size: 5000
  use_numba: true
  batch_processing: false

# Alert Configuration - Development (More Sensitive)
alerts:
  toast_enabled: true
  toast_duration: 3
  toast_sound: true
  log_file: "logs/alerts.jsonl"
  log_rotation: "10 MB"
  min_confidence: 0.3  # Lower threshold for development
  cooldown_seconds: 5   # Shorter cooldown for testing

# API Configuration
api:
  host: "0.0.0.0"
  port: 8000
  cors_enabled: true
  debug: true

# Logging
logging:
  level: "DEBUG"
  format: "{time:YYYY-MM-DD HH:mm:ss} | {level} | {name} | {message}"
  file: "logs/nids_dev.log"
  rotation: "50 MB"